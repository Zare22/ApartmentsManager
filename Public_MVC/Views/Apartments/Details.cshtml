@model Public_MVC.Models.Apartment
@using Public_MVC.Extensions
@using Recaptcha.Web.Mvc
@using Public_MVC.Resources
@{
    ViewBag.Title = "Details";
}
<style>
    .card {
        border: thin;
    }

    .card-img-top-container {
        border: 1px solid rgba(0, 0, 0, 0.125);
        overflow-x: auto;
        border-radius: 10px;
        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);
    }


    .thumbnail-image {
        padding: 1px;
        height: 100%
    }

    .apartment-info {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-gap: 20px;
        margin-top: 20px;
    }

    .info-item {
        background-color: #f1f1f1;
        padding: 20px;
        text-align: center;
        border-radius: 10px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
    }
    
    .info-item h5 {
        font-weight: bold;
        margin-bottom: 10px;
    }

    .tag-list {
        display: flex;
        flex-wrap: wrap;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .tag-item {
        background-color: #eee;
        border-radius: 4px;
        margin: 0.5em;
        padding: 0.5em;
    }
</style>

<div class="container" style="margin-top: 1.25rem">
    <div class="card">
        <div class="card-header" style="text-align:center">
            <h3 style="margin:0; padding:10px">@Model.Name</h3>
        </div>
        <div class="card-body">
            <div class="card-img-top-container">
                @if (Model.ApartmentPictures.Count < 1)
                {
                    Public_MVC.Models.ApartmentPicture defaultImage = new Public_MVC.Models.ApartmentPicture();
                    defaultImage.Name = "No_Image.jpg";
                    defaultImage.Base64Content = Convert.ToBase64String(System.IO.File.ReadAllBytes(Server.MapPath("~/Images/No_image.jpg")));

                    defaultImage.IsRepresentative = true;

                    Model.ApartmentPictures.Add(defaultImage);

                }
                @foreach (var image in Model.ApartmentPictures)
                {
                    <a class="fancy-photo"
                       href="data:image/png;base64,@Convert.ToBase64String(image.Base64Content.FromBase64String())"
                       rel="group">
                        <img class="card-img-top thumbnail-image" src="data:image/png;base64,@Convert.ToBase64String(image.Base64Content.FromBase64String())" alt="...">
                    </a>
                }
            </div>

            <div class="apartment-info">
                <div class="info-item">
                    <h5>@Resource.name:</h5>
                    <p>@Html.DisplayFor(model => model.Name)</p>
                </div>
                <div class="info-item">
                    <h5>@Resource.status:</h5>
                    <p>@Html.DisplayFor(model => model.ApartmentStatus.Name)</p>
                </div>
                <div class="info-item">
                    <h5>@Resource.city:</h5>
                    <p>@Html.DisplayFor(model => model.City.Name) </p>
                </div>
                <div class="info-item">
                    <h5>@Resource.address:</h5>
                    <p>@Html.DisplayFor(model => model.Address) </p>
                </div>
                <div class="info-item">
                    <h5>@Resource.price:</h5>
                    <p>@Html.DisplayFor(model => model.Price) </p>
                </div>
                <div class="info-item">
                    <h5>@Resource.adults:</h5>
                    <p>@Html.DisplayFor(model => model.MaxAdults) </p>
                </div>
                <div class="info-item">
                    <h5>@Resource.children:</h5>
                    <p>@Html.DisplayFor(model => model.MaxChildren) </p>
                </div>
                <div class="info-item">
                    <h5>@Resource.rooms:</h5>
                    <p>@Html.DisplayFor(model => model.TotalRooms) </p>
                </div>
                <div class="info-item">
                    <h5>@Resource.beachDistance:</h5>
                    <p>@Html.DisplayFor(model => model.BeachDistance) </p>
                </div>
            </div>


            <div class="tags">
                <h5>@Resource.tags:</h5>
                <ul class="tag-list">
                    @foreach (var tag in Model.TaggedApartments)
                    {
                        <li class="tag-item">@tag.Tag.Name</li>
                    }
                </ul>
            </div>



            <div class="card-text">
                @Html.ActionLink(Resource.backToApartments, "Index")
            </div>


            <div style="display: flex; flex-wrap: nowrap; justify-content:space-around">

                <form id="review-form">
                    <div class="form-group">
                        <label for="reviewDetails">@Resource.reviewDetails:</label>
                        <textarea class="form-control" name="details" id="details"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="stars">@Resource.stars:</label>
                        <input type="number" class="form-control" name="stars" id="stars" min="1" max="5">
                    </div>
                    <input type="hidden" name="apartmentId" value="@Model.Id">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <button type="submit" class="btn btn-primary">@Resource.submit</button>
                        <input type="hidden" name="userName" value="@User.Identity.Name" />
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary" disabled>@Resource.submit</button>
                        <label class="alert-warning" style="margin-left:2px">@Resource.reviewsBlocked!</label>
                    }
                </form>


                <form id="reserve-form">

                    @if (User.Identity.IsAuthenticated)
                    {
                        using (var db = new Public_MVC.Context.ApartmentsContext())
                        {
                            var user = db.AspNetUsers.Where(u => u.Email == User.Identity.Name).FirstOrDefault();
                            if (user != null)
                            {
                                <div class="form-group">
                                    <label for="email">Email:</label>
                                    <input type="email" class="form-control" id="email" name="email" value="@user.Email" required>
                                </div>
                                <div class="form-group">
                                    <label for="phone">@Resource.phone:</label>
                                    <input type="tel" class="form-control" id="phone" name="phone" value="@user.PhoneNumber" required>
                                </div>
                                <div class="form-group">
                                    <label for="address">@Resource.address:</label>
                                    <input type="text" class="form-control" id="address" name="address" value="@user.Address" required>
                                </div>
                                <input type="hidden" name="userId" value="@user.Id" />

                                <button type="submit" class="btn btn-primary">@Resource.reserve</button>
                            }
                        }
                    }
                    else
                    {
                        <div class="form-group">
                            <label for="email">Email:</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="form-group">
                            <label for="phone">@Resource.phone:</label>
                            <input type="tel" class="form-control" id="phone" name="phone" required>
                        </div>
                        <div class="form-group">
                            <label for="address">@Resource.address:</label>
                            <input type="text" class="form-control" id="address" name="address" required>
                        </div>
                        @Html.RecaptchaWidget()
                        if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                @Html.ValidationSummary()
                            </div>
                        }

                        <button type="submit" class="btn btn-primary">@Resource.reserve</button>

                    }

                    <input type="hidden" name="apartmentId" value="@Model.Id">
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#review-form').on('submit', function (e) {
            e.preventDefault();

            var formData = $(this).serialize();

            $.ajax({
                type: 'POST',
                url: "@Url.Action("LeaveReview", "Apartments")",
                data: formData,
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: '@Resource.swalSuccess',
                            text: response.message
                        })
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: '@Resource.swalFailure',
                            text: response.message
                        })
                    }
                }
            });
        });
    });
</script>


<script>
    $("#reserve-form").submit(function (e) {
        e.preventDefault();
        var formData = $(this).serialize();

        $.ajax({
            url: "@Url.Action("ReserveApartment", "Apartments")",
            type: "POST",
            data: formData,
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: '@Resource.swalSuccess',
                        text: response.message
                    })
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: '@Resource.swalFailure',
                        text: response.message
                    })
                }
            }
        });
    });
</script>


